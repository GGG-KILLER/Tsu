// <auto-generated />

#nullable enable

namespace {{ red_base.namespace | not_global }}
{
    {{ red_base.accessibility }} abstract class {{ suffix }}Walker : {{ red_base.namespace }}.{{ suffix }}Visitor
    {
        private int _recursionDepth;

        public override void Visit({{ red_base.csharp | not_null }}? node)
        {
            if (node != null)
            {
                _recursionDepth++;
                if (_recursionDepth > 30)
                {
                    global::System.Runtime.CompilerServices.RuntimeHelpers.EnsureSufficientExecutionStack();
                }

                node.Accept(this);

                _recursionDepth--;
            }
        }

        protected override void DefaultVisit({{ red_base.csharp | not_null }} node)
        {
            foreach (var child in node.ChildNodes())
            {
                Visit(child);
            }
        }
    }
}