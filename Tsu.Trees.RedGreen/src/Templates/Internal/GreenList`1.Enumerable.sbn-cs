{{~ if create_lists ~}}
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

namespace {{ green_list.namespace | not_global }}
{
    {{ green_list.accessibility }} partial struct {{ green_list.name }}<TNode> where TNode : {{ green_base.csharp }}
    {
        {{ green_list.accessibility }} struct Enumerator
        {
            private readonly {{ green_list.name }}<TNode> _list;
            private int _index;

            internal Enumerator({{ green_list.name }}<TNode> list)
            {
                _list = list;
                _index = -1;
            }

            public bool MoveNext()
            {
                var newIndex = _index + 1;
                if (newIndex < _list.Count)
                {
                    _index = newIndex;
                    return true;
                }

                return false;
            }

            public TNode Current => _list[_index]!;
        }
    }
}
{{~ end ~}}