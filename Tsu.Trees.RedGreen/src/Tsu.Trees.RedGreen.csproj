<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TsuProjectType>SourceGenerator</TsuProjectType>

    <TargetFramework>netstandard2.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <LangVersion>preview</LangVersion>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);NU5128</NoWarn>

    <IsRoslynComponent>true</IsRoslynComponent>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <IncludeBuildOutput>false</IncludeBuildOutput>

    <IncludeSymbols>false</IncludeSymbols>
    <SymbolPackageFormat></SymbolPackageFormat>

    <Copyright>GGG KILLER © 2024</Copyright>
    <PackageId>Tsu.Trees.RedGreen</PackageId>
    <Version>0.1.0</Version>
    <Description>A source generator generates all the boilerplate for your red/green trees.</Description>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.7.0" PrivateAssets="all" />
  </ItemGroup>

</Project>
