// <auto-generated />

#nullable enable

using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq;

namespace Tsu.Trees.RedGreen.Sample
{
    public static class SampleFactory
    {
        public static global::Tsu.Trees.RedGreen.Sample.IdentifierExpressionSample IdentifierExpression(global::System.String name) =>
            (global::Tsu.Trees.RedGreen.Sample.IdentifierExpressionSample) global::Tsu.Trees.RedGreen.Sample.Internal.SampleFactory.IdentifierExpression(name).CreateRed();

        public static global::Tsu.Trees.RedGreen.Sample.NumericalLiteralExpressionSample NumericalLiteralExpression(global::System.Double value) =>
            (global::Tsu.Trees.RedGreen.Sample.NumericalLiteralExpressionSample) global::Tsu.Trees.RedGreen.Sample.Internal.SampleFactory.NumericalLiteralExpression(value).CreateRed();

        public static global::Tsu.Trees.RedGreen.Sample.BinaryOperationExpressionSample BinaryOperationExpression(global::Tsu.Trees.RedGreen.Sample.SampleKind kind, global::Tsu.Trees.RedGreen.Sample.ExpressionSample left, global::Tsu.Trees.RedGreen.Sample.ExpressionSample right) =>
            (global::Tsu.Trees.RedGreen.Sample.BinaryOperationExpressionSample) global::Tsu.Trees.RedGreen.Sample.Internal.SampleFactory.BinaryOperationExpression(kind, (global::Tsu.Trees.RedGreen.Sample.Internal.ExpressionSample)left.Green, (global::Tsu.Trees.RedGreen.Sample.Internal.ExpressionSample)right.Green).CreateRed();

        public static global::Tsu.Trees.RedGreen.Sample.FunctionCallExpressionSample FunctionCallExpression(global::Tsu.Trees.RedGreen.Sample.IdentifierExpressionSample identifier, global::Tsu.Trees.RedGreen.Sample.ExpressionSample firstArg) =>
            (global::Tsu.Trees.RedGreen.Sample.FunctionCallExpressionSample) global::Tsu.Trees.RedGreen.Sample.Internal.SampleFactory.FunctionCallExpression((global::Tsu.Trees.RedGreen.Sample.Internal.IdentifierExpressionSample)identifier.Green, (global::Tsu.Trees.RedGreen.Sample.Internal.ExpressionSample)firstArg.Green).CreateRed();

        public static global::Tsu.Trees.RedGreen.Sample.FunctionCallExpressionSample FunctionCallExpression(global::Tsu.Trees.RedGreen.Sample.IdentifierExpressionSample identifier, global::Tsu.Trees.RedGreen.Sample.ExpressionSample firstArg, global::Tsu.Trees.RedGreen.Sample.ExpressionSample? secondArg) =>
            (global::Tsu.Trees.RedGreen.Sample.FunctionCallExpressionSample) global::Tsu.Trees.RedGreen.Sample.Internal.SampleFactory.FunctionCallExpression((global::Tsu.Trees.RedGreen.Sample.Internal.IdentifierExpressionSample)identifier.Green, (global::Tsu.Trees.RedGreen.Sample.Internal.ExpressionSample)firstArg.Green, secondArg == null ? null : (global::Tsu.Trees.RedGreen.Sample.Internal.ExpressionSample)secondArg.Green).CreateRed();
    }
}

