name: Test and Publish

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

on:
  push:
  pull_request:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v5
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0
          9.0
          10.0
        cache: True
        cache-dependency-path: |
          **/packages.lock.json
    - name: Install dependencies
      run: dotnet restore --locked-mode
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --configuration Release --no-build

  push:
    name: NuGet Push
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v5
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0
          9.0
          10.0
        cache: True
        cache-dependency-path: |
          **/packages.lock.json
    - name: Install dependencies
      run: dotnet restore --locked-mode
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Generate NuGet packages
      run: dotnet pack --configuration Release --no-build --output packages
    - uses: actions/upload-artifact@v4
      with:
        name: Artifacts
        path: packages/
    - name: Publish packages
      run: |
        for package in packages/*.nupkg; do
          dotnet nuget push $package --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
        done
      shell: bash

  # TODO: Fix when I can be bothered to.
  # train:
  #   name: Intellicode Train
  #   runs-on: windows-latest
  #   needs: [build]
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/master'
  #   steps:
  #   - uses: actions/checkout@v5
  #     with:
  #       fetch-depth: 0 # We need to fetch the entire Git history in order to verify the authenticity.
  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v4
  #     with:
  #       dotnet-version: |
  #         6.0.x
  #         7.0.x
  #         8.0.x
  #   - name: Install dependencies
  #     run: dotnet restore --locked-mode
  #   - name: Build
  #     run: dotnet build --configuration Release --no-restore
  #   - name: Train Intellicode Model
  #     uses: microsoft/vs-intellicode@v1
